<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EAAACxABrSO9dQAABI1JREFUeF7t2TFunFUUBeAIkIhooIAN0FHTUmYL9FS0dNSUbIEtsAVaOtgCVHQ0
        NEgUIHPn6bNk6ZBwx++fxPbcT3oS3JNzZ+YR+3fCszHGGGOMMcYYY4wxxhgP3c3NzYen41/H61KX/mmd
        7+r8WeevOt/XeSEel1AX/G6dz+v8WOdlfq7zZZ331MauusyP63xb5/c6XX/UOX2FfGLNOEdd3Ft1XtQ5
        fWv5u859/VPnhzqnr5y3rR8vU5f0QZ2v6vxS52i/1fmmzkdebtyqS7n7UL20eWif1AU8r/NFnZ/q3Mev
        db52Tv98H6fXPr2H597W01cf9j4P1Vt3v6e/Y+URz4yn/dCuD/baLqh+zVH/gR//Q7s+xPt1dh6q9/65
        vjqdPze8yu1D+/H9Sbve9M5D9fCHZO16UO/nIuoNHvU77mI/Jtbu3R9zH96ftOvNPLrvufVaj/uhXS/8
        ZH7qqPfweH4D1Yu8sYfqpdV7ergP7Vr69B9id9R7PeLzfmbdvrX2fI/3xzjqvW99xVuzz76OJ/m3j/VZ
        7vXMU99n36tczd+/12dsP7RV9tn3X672/0DVZ/7fh7Zfus++IL56riOI99kXxIeyOojb1IL4UFYH8T77
        gvhQVgdxm1oQH8rqIN5nXxAfyuogblML4kNZHcT77AviNrUgXoyCuE0tiBejIG5TC+J99gVxm1oQL0ZB
        3KYWxItRELepBfE++4K4TS2IF6MgblML4sUoiNvUgniffUHcphbEi1EQt6kF8WIUxG1qQbzPviBuUwvi
        xSiI29SCeDEK4ja1IN5nXxC3qQXxYhTEbWpBvBgFcZtaEO+zL4jb1IJ4MQriNrUgXoyCuE0tiPfZF8Rt
        akG8GAVxm1oQL0ZB3KYWxPvsC+I2tSBejIK4TS2IF6MgblML4n32BXEQt6ktRhfjZRajNrUgDuJ99gVx
        ELepLUYX42UWoza1IA7iffYFcRC3qS1GF+NlFqM2tSAO4n32BXEQt6ktRhfjZRajNrUgDuJ99gVxELep
        LUYX42UWoza1IA7iffYFcRC3qS1GF+NlFqM2tSAO4n32BXGbWhAvRkHcphbEi1EQt6kF8T77grhNLYgX
        oyBuUwvixSiI29SCeJ99QdymFsSLURC3qQXxYhTEbWpBvM++IG5TC+LFKIjb1IJ4MQriNrUg3mdfELep
        BfFiFMRtakG8GAVxm1oQ77MviNvUgngxCuI2tSBejIK4TS2I99kXxG1qQbwYBXGbWhAvRkHcphbE++wL
        4ja1IF6MgrhNLYgXoyBuUwviffYFcZtaEC9GQdymFsSLURC3qQXxPvuC+FBWB3GbWhAfyuog3mdfEB/K
        6iBuUwviQ1kdxPvsC+JDWR3EbWpBfCirg3iffUF89VxHEO+zL4ivnusI4n32BfHVcx1BvM++IL56riOI
        99kXxFfPdQTxPvuC+Oq5jiDeZ18QXz3XEcT77Aviq+c6gniffUF89VxHEO+zb5zJ9e2zb5zJ9e2zb5zJ
        9e2zb5zJ9e2zb5zJ9e2zb5zJ9Y0xxhhjjDHGGGOMMcYYb9azZ/8CHV7fCE7oWb8AAAAASUVORK5CYII=
</value>
  </data>
</root>